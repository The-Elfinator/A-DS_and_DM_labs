3

S 0 _ _ -> S _ > 0 > _ ^
S 1 _ _ -> S _ > 1 > _ ^
S o _ _ -> S _ > o > _ ^
S a _ _ -> S _ > a > _ ^
S ( _ _ -> S _ > ( > _ ^
S ) _ _ -> S _ > ) > _ ^
S (0 _ _ -> splitBracket 0 ^ ( > _ ^
S (1 _ _ -> splitBracket 1 ^ ( > _ ^
S 0) _ _ -> splitBracket ) ^ 0 > _ ^
S 1) _ _ -> splitBracket ) ^ 1 > _ ^
splitBracket 0 _ _ -> S _ > 0 > _ ^
splitBracket 1 _ _ -> S _ > 1 > _ ^
splitBracket ) _ _ -> S _ > ) > _ ^
S _ _ _ -> toBegin _ < _ < _ ^

toBegin _ 0 _ -> toBegin _ ^ 0 < _ ^
toBegin _ 1 _ -> toBegin _ ^ 1 < _ ^
toBegin _ o _ -> toBegin _ ^ o < _ ^
toBegin _ a _ -> toBegin _ ^ a < _ ^
toBegin _ ( _ -> toBegin _ ^ ( < _ ^
toBegin _ ) _ -> toBegin _ ^ ) < _ ^
toBegin _ _ _ -> parse # > _ > # >

parse _ 0 _ -> parse 0 > _ > _ ^
parse _ 1 _ -> parse 1 > _ > _ ^
parse _ o _ -> parse _ ^ _ > o >
parse _ a _ -> parse _ ^ _ > a >
parse _ ( _ -> parse # > _ > # >
parse _ ) _ -> prepare _ < _ ^ _ ^
parse _ _ _ -> prepare _ < _ ^ _ ^

prepare 0 _ _ -> prepare 0 < _ ^ _ ^
prepare 1 _ _ -> prepare 1 < _ ^ _ ^
prepare # _ _ -> prepare # ^ _ ^ _ <
prepare # _ o -> prepare # ^ _ ^ o <
prepare # _ a -> prepare # ^ _ ^ a <
prepare # _ # -> evalAnd # > _ ^ # >
prepare _ _ _ -> AC _ > _ ^ _ ^

evalAnd 0 _ o -> evalAnd 0 > _ ^ o >
evalAnd 1 _ o -> evalAnd 1 > _ ^ o >
evalAnd 0 _ a -> compAnd0 . > _ ^ . ^
evalAnd 1 _ a -> compAnd1 . > _ ^ . ^
compAnd0 0 _ . -> evalAnd 0 ^ _ ^ . >
compAnd0 1 _ . -> evalAnd 0 ^ _ ^ . >
compAnd1 0 _ . -> evalAnd 0 ^ _ ^ . >
compAnd1 1 _ . -> evalAnd 1 ^ _ ^ . >
evalAnd 0 _ _ -> prepareOr 0 ^ _ ^ _ ^
evalAnd 1 _ _ -> prepareOr 1 ^ _ ^ _ ^
prepareOr 0 _ _ -> prepareOr 0 < _ ^ _ ^
prepareOr 1 _ _ -> prepareOr 1 < _ ^ _ ^
prepareOr . _ _ -> prepareOr . < _ ^ _ ^
prepareOr # _ _ -> prepareOr # ^ _ ^ _ <
prepareOr # _ o -> prepareOr # ^ _ ^ . <
prepareOr # _ . -> prepareOr # ^ _ ^ . <
prepareOr # _ # -> evalOr # > _ ^ # >
evalOr 0 _ . -> evalOr _ > _ ^ _ >
evalOr 0 _ _ -> evalOr _ > _ ^ _ ^
evalOr . _ . -> evalOr _ > _ ^ _ >
evalOr . _ _ -> evalOr _ > _ ^ _ ^
evalOr _ _ _ -> set0 _ ^ _ ^ _ ^
evalOr 1 _ . -> res1 _ > _ ^ _ >
evalOr 1 _ _ -> res1 _ > _ ^ _ ^
res1 0 _ . -> res1 _ > _ ^ _ >
res1 1 _ . -> res1 _ > _ ^ _ >
res1 0 _ _ -> res1 _ > _ ^ _ ^
res1 1 _ _ -> res1 _ > _ ^ _ ^
res1 _ _ _ -> set1 _ ^ _ ^ _ ^
set0 _ _ _ -> set0 _ ^ _ ^ _ <
set0 _ _ # -> set0 _ ^ _ ^ $ ^
set0 _ _ $ -> set0 _ < _ ^ $ ^
set0 # _ $ -> parse 0 > _ > _ ^
set1 _ _ _ -> set1 _ ^ _ ^ _ <
set1 _ _ # -> set1 _ ^ _ ^ $ ^
set1 _ _ $ -> set1 _ < _ ^ $ ^
set1 # _ $ -> parse 1 > _ > _ ^
